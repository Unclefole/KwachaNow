version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: kwachanow-postgres
    environment:
      POSTGRES_DB: kwachanow
      POSTGRES_USER: kwachanow_user
      POSTGRES_PASSWORD: kwachanow_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kwachanow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kwachanow_user -d kwachanow"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: kwachanow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kwachanow-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # KwachaNow Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kwachanow-app
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://kwachanow_user:kwachanow_password@postgres:5432/kwachanow
      - REDIS_URL=redis://redis:6379
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - kwachanow-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
        - action: rebuild
          path: package.json

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  kwachanow-network:
    driver: bridge